
name: Tests

on:
  push:
  workflow_dispatch:

jobs:
  # These container builds don't pull caches from the Docker registry, so they
  # are very slow. Disabling them for now.
  # dev-container:
  #   name: Deploy dev-container
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: docker/build-push-action@v1
  #       with:
  #         dockerfile: containers/Dockerfile
  #         target: dev
  #         username: ${{ secrets.DOCKER_USERNAME }}
  #         password: ${{ secrets.DOCKER_PASSWORD }}
  #         repository: nilsleiffischer/gwpv
  #         # This would tag the container 'latest', not taking the build target
  #         # into account. So we tag the container 'latest-dev' manually, but
  #         # note that the container will be overridden by pushes to other
  #         # branches.
  #         # See: https://github.com/docker/build-push-action/issues/83
  #         # tag_with_ref: true
  #         tags: latest-dev
  #         always_pull: true
  #         cache_froms: nilsleiffischer/gwpv:latest-dev
  tests:
    name: Tests
    runs-on: ubuntu-latest
    # needs: dev-container
    container: nilsleiffischer/gwpv:latest-dev
    steps:
      - uses: actions/checkout@v3
      - name: Setup Python package
        run: |
          pip3 install .
      - name: Run unit tests
        run: |
          python3 -m unittest discover -s tests
      - name: Setup rendering test
        run: |
          mkdir test_rendering
      - name: Test 'scene' endpoint
        working-directory: test_rendering
        run: >
          gwrender scene
          $GITHUB_WORKSPACE/Examples/Rainbow/Rainbow.yaml Resolutions/Test
          -o ./ -n2 -v
      - name: Test 'scenes' endpoint
        working-directory: test_rendering
        run: >
          gwrender scenes
          $GITHUB_WORKSPACE/Examples/Rainbow/Scenes.yaml Resolutions/Test
          -o ./ -n2 -v
      # - name: Test 'waveform' endpoint
      #   working-directory: test_rendering
      #   run: >
      #     gwrender waveform $GITHUB_WORKSPACE/Examples/Rainbow/Rainbow.yaml
      #     --time-merger 5064 --mass 150 -o ./ -v
  docs:
    name: Deploy documentation
    needs: tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install Python dependencies
        run: |
          pip install -r docs/requirements.txt
      - name: Build docs
        run: |
          cd docs
          make html
      - name: Deploy to gh-pages
        if: github.event_name == 'push' && github.ref == 'refs/heads/develop'
        uses: peaceiris/actions-gh-pages@v3
        with:
          publish_dir: docs/_build/html
          publish_branch: gh-pages
          github_token: ${{ secrets.GITHUB_TOKEN }}
          force_orphan: true
  deploy-container:
    name: Deploy container
    needs: tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: docker/build-push-action@v1
        with:
          dockerfile: containers/Dockerfile
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: nilsleiffischer/gwpv
          tag_with_ref: true
          cache_froms: nilsleiffischer/gwpv:latest-dev,nilsleiffischer/gwpv:latest
          always_pull: true
  examples:
    name: Examples
    needs: deploy-container
    runs-on: ubuntu-latest
    steps:
      # Note that the container must run as the user `root` to be able to write
      # to the $GITHUB_WORKSPACE directory:
      # https://docs.github.com/en/actions/reference/virtual-environments-for-github-hosted-runners#docker-container-filesystem
      - name: Rainbow still
        run: >
          docker run -v $PWD:/out nilsleiffischer/gwpv:latest
          scene Examples/Rainbow/Still.yaml -o /out/Still
      - name: Rainbow movie
        run: >
          docker run -v $PWD:/out nilsleiffischer/gwpv:latest
          scene Examples/Rainbow/Rainbow.yaml
          --render-movie-to-file /out/Rainbow --num-jobs 2
      - name: Rainbow scenes
        run: >
          docker run -v $PWD:/out nilsleiffischer/gwpv:latest
          scenes Examples/Rainbow/Scenes.yaml -o /out/Scenes --num-jobs 2
